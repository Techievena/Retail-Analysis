getwd()
clc
clear
clc()
clear()
getwd()
rm
?par
?Devices
x<-rnorm(100)
hist(x)
str(str)
str(gl)
f<-gl(3,10)
f
summary(f)
str(factor)
str(f)
?factor
?lm
?gl
gl(2, 8, labels = c("Control", "Treat"))
f<-gl(2, 8, labels = c("Control", "Treat"))
str(f)
summary(f)
x<-rnorm(10)
f1<-gl(2,5)
f2<-gl(5,2)
interaction(f1,f2)
f1
f2
y<-interaction(f1,f2)
summary(y)
str(y)
?interaction
y<-interaction(f1,f2,drop = TRUE)
y
demo()
demo(package = .packages(all.available = TRUE))
setwd("/home/abinash/Desktop/OPEN IIT DA/machinelearningdataset/")
temp = list.files(pattern="*.csv")
library(pracma)
list2env(
dataset<-lapply(setNames(temp, make.names(gsub("*.csv$", "", temp))),
read.csv), envir = .GlobalEnv)
finaldata<-matrix(ncol=8,nrow=334)
sum1=0
sum2=0
sum3=0
sum4=0
sum5=0
sum6=0
sum7=0
sum8=0
sum9=0
sum10=0
sum11=0
sum12=0
sum13=0
sum14=0
sum=0
RULcalc <- function(holenumber,drillval){
switch(drillval,
"1" = 21-holenumber,
"2" = 20-holenumber,
"3" = 20-holenumber,
"4" = 16-holenumber,
"5" = 19-holenumber,
"6" = 18-holenumber,
"7" = 21-holenumber,
"8" = 19-holenumber,
"9" = 23-holenumber,
"10" = 23-holenumber,
"11" = 23-holenumber,
"12" = 21-holenumber,
"13" = 45-holenumber,
"14" = 45-holenumber
)
}
for(i in 1:length(dataset))
{
variable<-as.data.frame(dataset[i])
name<-names(dataset[i])
pos<-regexpr('h', name)
drillbit<-as.numeric(substr(name,2,pos-1))
drillcharval<-as.character(drillbit)
switch(drillcharval,
"1" = sum1<-sum1+nrow(variable),
"2" = sum2<-sum2+nrow(variable),
"3" = sum3<-sum3+nrow(variable),
"4" = sum4<-sum4+nrow(variable),
"5" = sum5<-sum5+nrow(variable),
"6" = sum6<-sum6+nrow(variable),
"7" = sum7<-sum7+nrow(variable),
"8" = sum8<-sum8+nrow(variable),
"9" = sum9<-sum9+nrow(variable),
"10" = sum10<-sum10+nrow(variable),
"11" = sum11<-sum11+nrow(variable),
"12" = sum12<-sum12+nrow(variable),
"13" = sum13<-sum13+nrow(variable),
"14" = sum14<-sum14+nrow(variable)
)
}
degden_cal <- function(drillval){
switch(drillval,
"1" = sum1,
"2" = sum2,
"3" = sum3,
"4" = sum4,
"5" = sum5,
"6" = sum6,
"7" = sum7,
"8" = sum8,
"9" = sum9,
"10" = sum10,
"11" = sum11,
"12" = sum12,
"13" = sum13,
"14" = sum14
)
}
for(i in 1:length(dataset))
{
variable<-as.data.frame(dataset[i])
colnames(variable)<-c("Thrust","Torque")
meanthrust<-mean(variable$Thrust)
maxthrust<-max(variable$Thrust)
meantor<-mean(variable$Torque)
maxtor<-max(variable$Torque)
area<-abs(trapz(variable$Thrust,variable$Torque))
deg_num<-nrow(variable)
name<-names(dataset[i])
pos<-regexpr('h', name)
holenumber<-as.numeric(substr(name,pos+1,nchar(name)))
drillbit<-as.numeric(substr(name,2,pos-1))
drillcharval<-as.character(drillbit)
RUL<-RULcalc(holenumber,drillcharval)
deg_den<-degden_cal(drillcharval)
degradation<-deg_num/deg_den
finaldata[i, ]<-c(name,meanthrust,meantor,degradation,maxthrust,maxtor,area,RUL)
}
finaldata<-as.data.frame(finaldata)
colnames(finaldata)<-c("Drill bit","Mean Thrust","Mean Torque","Degradation","Max Thrust","Max Torque","Area","RUL")
testdata<-finaldata[24:157,]
traindata<-finaldata[c(-24:-157),]
setwd("/home/abinash/Desktop/OPEN IIT DA/")
write.csv(traindata,"traindatafinal.csv")
write.csv(testdata,"testdatafinal.csv")
setwd("/home/abinash/Desktop/OPEN IIT DA/")
library(httr)
library(twitteR)
library(ROAuth)
load("twitter authentication.Rdata")
download.file(url="http://curl.haxx.se/ca/cacert.pem",destfile="cacert.pem")
cred <- OAuthFactory$new(consumerKey='uV1D14HTuQLBgbFpAw4mdU8gr',
consumerSecret='Hi0rVWfoOR06Cp3yVV3Ost4KQJdHoYsqsW5AddKsxI7pjVt4J5',
requestURL='https://api.twitter.com/oauth/request_token',
accessURL='https://api.twitter.com/oauth/access_token',
authURL='https://api.twitter.com/oauth/authorize')
cred$handshake(cainfo="cacert.pem")
save(cred, file="twitter authentication.Rdata")
load("twitter authentication.Rdata")
registerTwitterOAuth(cred)
setup_twitter_oauth(CUSTOMER_KEY, CUSTOMER_SECRET, ACCESS_TOKEN, ACCESS_secret, credentials_file=NULL)
setup_twitter_oauth(uV1D14HTuQLBgbFpAw4mdU8gr, Hi0rVWfoOR06Cp3yVV3Ost4KQJdHoYsqsW5AddKsxI7pjVt4J5, 3334456338-BBMNgXkXPlAAb6ntpEOM1cYSSqFS9ZbMfpLGQTf, EumJ2DRiAnQNHKOS6X3lWcieqaRw3JkB0G3hNU4E7PAOc, credentials_file=NULL)
setup_twitter_oauth(uV1D14HTuQLBgbFpAw4mdU8gr, Hi0rVWfoOR06Cp3yVV3Ost4KQJdHoYsqsW5AddKsxI7pjVt4J5, 3334456338-BBMNgXkXPlAAb6ntpEOM1cYSSqFS9ZbMfpLGQTf, EumJ2DRiAnQNHKOS6X3lWcieqaRw3JkB0G3hNU4E7PAOc, NULL)
setup_twitter_oauth(uV1D14HTuQLBgbFpAw4mdU8gr, Hi0rVWfoOR06Cp3yVV3Ost4KQJdHoYsqsW5AddKsxI7pjVt4J5, 3334456338-BBMNgXkXPlAAb6ntpEOM1cYSSqFS9ZbMfpLGQTf, EumJ2DRiAnQNHKOS6X3lWcieqaRw3JkB0G3hNU4E7PAOc)
cred <- OAuthFactory$new(consumerKey='uV1D14HTuQLBgbFpAw4mdU8gr', consumerSecret='Hi0rVWfoOR06Cp3yVV3Ost4KQJdHoYsqsW5AddKsxI7pjVt4J5', requestURL='https://api.twitter.com/oauth/request_token', accessURL='https://api.twitter.com/oauth/access_token', authURL='https://api.twitter.com/oauth/authorize')
cred$handshake(cainfo="cacert.pem")
cred$handshake(cainfo="cacert.pem")
save(cred, file="twitter authentication.Rdata")
load("twitter authentication.Rdata")
registerTwitterOAuth(cred)
setup_twitter_oauth(uV1D14HTuQLBgbFpAw4mdU8gr, Hi0rVWfoOR06Cp3yVV3Ost4KQJdHoYsqsW5AddKsxI7pjVt4J5, 3334456338-BBMNgXkXPlAAb6ntpEOM1cYSSqFS9ZbMfpLGQTf, EumJ2DRiAnQNHKOS6X3lWcieqaRw3JkB0G3hNU4E7PAOc)
library(SchedulerR)
install.packages('ScheduleR')
install.packages('ScheduleR')
install.packages('wordcloud')
library(shiny)
library(shinythemes)
install.packages('shinythemes')
?melt
library(reshape2)
?melt
??melt
?sapply
library(data.table)
install.packages('data.table')
install.packages('ScheduleR')
install.packages('SchedulerR')
install.packages('SchedulerR')
install.packages('SchedulerR')
library(SchedulerR)
library(Scheduler)
install.packages('Scheduler')
install.packages('SchedulerR')
install.packages('taskscheduleR')
install.packages("tableHTML")
library(twitteR)
library(ROAuth)
require(RCurl)
library(stringr)
library(tm)
library(ggmap)
library(dplyr)
library(plyr)
library(tm)
library(wordcloud)
key="uV1D14HTuQLBgbFpAw4mdU8gr"
secret="hidden"
library(twitteR)
library(ROAuth)
require(RCurl)
library(stringr)
library(tm)
library(ggmap)
library(plyr)
library(dplyr)
library(tm)
library(wordcloud)
key="uV1D14HTuQLBgbFpAw4mdU8gr"
secret="Hi0rVWfoOR06Cp3yVV3Ost4KQJdHoYsqsW5AddKsxI7pjVt4J5"
setwd("/text_mining_and_web_scraping")
download.file(url="http://curl.haxx.se/ca/cacert.pem",
destfile="/text_mining_and_web_scraping/cacert.pem",
method="auto")
authenticate <- OAuthFactory$new(consumerKey=key,
consumerSecret=secret,
requestURL="https://api.twitter.com/oauth/request_token",
accessURL="https://api.twitter.com/oauth/access_token",
authURL="https://api.twitter.com/oauth/authorize")
setup_twitter_oauth(key, secret)
library(xlsx)
install.packages("xlsx")
install.packages("bootstrap")
inputtable
clean
quit()
setwd("~/R/Working Directory/Retail-Analysis")
library(data.table)
library(plyr)
library(xts)
library(ggplot2)
inputtable<-read.csv("Retail Analytics.csv")
date_unit<-ddply(inputtable,~Date,summarise,Sum_Unit=sum(Units))
dt<-as.data.frame(table(inputtable$Date))
date_unit$Frequency<-dt$Freq
date_unit$Date<-as.Date(date_unit$Date)
s_u<-c()
f_u<-c()
d_u<-c()
j=1
k=0
s.date<-date_unit$Date[1]
e.date<-date_unit$Date[length(date_unit$Date)]
for(i in s.date:e.date){
if(i==date_unit$Date[j]){
s_u<-append(s_u,date_unit$Sum_Unit[j])
f_u<-append(f_u,date_unit$Frequency[j])
j<-j+1
}
else{
s_u<-append(s_u,0.0)
f_u<-append(f_u,0)
}
d_u<-append(d_u,s.date+k)
k<-k+1
}
date_unit<-data.frame(Date=d_u, Sum_Unit=s_u, Frequency=f_u)
time_series_unit<-xts(date_unit$Sum_Unit,date_unit$Date)
time_series_frequency<-xts(date_unit$Frequency,date_unit$Date)
rm(dt,d_u,f_u,s_u,e.date,s.date,i,j,k)
par(mfrow=c(2,1))
plot(time_series_unit)
par(mfrow=c(1,2))
plot(time_series_unit)
plot(time_series_frequency)
plot(diff(time_series_unit))
plot(diff(time_series_frequency))
plot(time_series_unit)
plot(diff(time_series_frequency))
plot(time_series_unit)
plot(time_series_frequency)
acf(time_series_unit, lag.max = 40) #Positive corelation upto 35
pacf(time_series_unit, lag.max = 40) #Positive partial-corelation upto 7
acf(time_series_unit, lag.max = 20) #Positive corelation upto 35
pacf(time_series_unit, lag.max = 20) #Positive partial-corelation upto 7
acf(time_series_unit, lag.max = 30) #Positive corelation upto 35
pacf(time_series_unit, lag.max = 30) #Positive partial-corelation upto 7
acf(time_series_unit, lag.max = 20) #Positive corelation upto 35
pacf(time_series_unit, lag.max = 20) #Positive partial-corelation upto 7
acf(time_series_unit, lag.max = 10) #Positive corelation upto 35
pacf(time_series_unit, lag.max = 10) #Positive partial-corelation upto 7
acf(time_series_unit, lag.max = 20) #Positive corelation upto 35
pacf(time_series_unit, lag.max = 20) #Positive partial-corelation upto 7
pacf(time_series_frequency, lag.max = 40) #Positive partial-corelation upto 5
pacf(time_series_frequency, lag.max = 20) #Positive partial-corelation upto 5
acf(diff(time_series_unit, arithmetic = TRUE), na.action = na.pass, ci.type='ma') #lag1 correlation = -0.5 differencing done
acf(diff(time_series_unit, arithmetic = TRUE), na.action = na.pass, ci.type='ma') #lag1 correlation = -0.5 differencing done
View(inputtable)
