?gl
gl(2, 8, labels = c("Control", "Treat"))
f<-gl(2, 8, labels = c("Control", "Treat"))
str(f)
summary(f)
x<-rnorm(10)
f1<-gl(2,5)
f2<-gl(5,2)
interaction(f1,f2)
f1
f2
y<-interaction(f1,f2)
summary(y)
str(y)
?interaction
y<-interaction(f1,f2,drop = TRUE)
y
demo()
demo(package = .packages(all.available = TRUE))
setwd("/home/abinash/Desktop/OPEN IIT DA/machinelearningdataset/")
temp = list.files(pattern="*.csv")
library(pracma)
list2env(
dataset<-lapply(setNames(temp, make.names(gsub("*.csv$", "", temp))),
read.csv), envir = .GlobalEnv)
finaldata<-matrix(ncol=8,nrow=334)
sum1=0
sum2=0
sum3=0
sum4=0
sum5=0
sum6=0
sum7=0
sum8=0
sum9=0
sum10=0
sum11=0
sum12=0
sum13=0
sum14=0
sum=0
RULcalc <- function(holenumber,drillval){
switch(drillval,
"1" = 21-holenumber,
"2" = 20-holenumber,
"3" = 20-holenumber,
"4" = 16-holenumber,
"5" = 19-holenumber,
"6" = 18-holenumber,
"7" = 21-holenumber,
"8" = 19-holenumber,
"9" = 23-holenumber,
"10" = 23-holenumber,
"11" = 23-holenumber,
"12" = 21-holenumber,
"13" = 45-holenumber,
"14" = 45-holenumber
)
}
for(i in 1:length(dataset))
{
variable<-as.data.frame(dataset[i])
name<-names(dataset[i])
pos<-regexpr('h', name)
drillbit<-as.numeric(substr(name,2,pos-1))
drillcharval<-as.character(drillbit)
switch(drillcharval,
"1" = sum1<-sum1+nrow(variable),
"2" = sum2<-sum2+nrow(variable),
"3" = sum3<-sum3+nrow(variable),
"4" = sum4<-sum4+nrow(variable),
"5" = sum5<-sum5+nrow(variable),
"6" = sum6<-sum6+nrow(variable),
"7" = sum7<-sum7+nrow(variable),
"8" = sum8<-sum8+nrow(variable),
"9" = sum9<-sum9+nrow(variable),
"10" = sum10<-sum10+nrow(variable),
"11" = sum11<-sum11+nrow(variable),
"12" = sum12<-sum12+nrow(variable),
"13" = sum13<-sum13+nrow(variable),
"14" = sum14<-sum14+nrow(variable)
)
}
degden_cal <- function(drillval){
switch(drillval,
"1" = sum1,
"2" = sum2,
"3" = sum3,
"4" = sum4,
"5" = sum5,
"6" = sum6,
"7" = sum7,
"8" = sum8,
"9" = sum9,
"10" = sum10,
"11" = sum11,
"12" = sum12,
"13" = sum13,
"14" = sum14
)
}
for(i in 1:length(dataset))
{
variable<-as.data.frame(dataset[i])
colnames(variable)<-c("Thrust","Torque")
meanthrust<-mean(variable$Thrust)
maxthrust<-max(variable$Thrust)
meantor<-mean(variable$Torque)
maxtor<-max(variable$Torque)
area<-abs(trapz(variable$Thrust,variable$Torque))
deg_num<-nrow(variable)
name<-names(dataset[i])
pos<-regexpr('h', name)
holenumber<-as.numeric(substr(name,pos+1,nchar(name)))
drillbit<-as.numeric(substr(name,2,pos-1))
drillcharval<-as.character(drillbit)
RUL<-RULcalc(holenumber,drillcharval)
deg_den<-degden_cal(drillcharval)
degradation<-deg_num/deg_den
finaldata[i, ]<-c(name,meanthrust,meantor,degradation,maxthrust,maxtor,area,RUL)
}
finaldata<-as.data.frame(finaldata)
colnames(finaldata)<-c("Drill bit","Mean Thrust","Mean Torque","Degradation","Max Thrust","Max Torque","Area","RUL")
testdata<-finaldata[24:157,]
traindata<-finaldata[c(-24:-157),]
setwd("/home/abinash/Desktop/OPEN IIT DA/")
write.csv(traindata,"traindatafinal.csv")
write.csv(testdata,"testdatafinal.csv")
setwd("/home/abinash/Desktop/OPEN IIT DA/")
library(httr)
library(twitteR)
library(ROAuth)
load("twitter authentication.Rdata")
download.file(url="http://curl.haxx.se/ca/cacert.pem",destfile="cacert.pem")
cred <- OAuthFactory$new(consumerKey='uV1D14HTuQLBgbFpAw4mdU8gr',
consumerSecret='Hi0rVWfoOR06Cp3yVV3Ost4KQJdHoYsqsW5AddKsxI7pjVt4J5',
requestURL='https://api.twitter.com/oauth/request_token',
accessURL='https://api.twitter.com/oauth/access_token',
authURL='https://api.twitter.com/oauth/authorize')
cred$handshake(cainfo="cacert.pem")
save(cred, file="twitter authentication.Rdata")
load("twitter authentication.Rdata")
registerTwitterOAuth(cred)
setup_twitter_oauth(CUSTOMER_KEY, CUSTOMER_SECRET, ACCESS_TOKEN, ACCESS_secret, credentials_file=NULL)
setup_twitter_oauth(uV1D14HTuQLBgbFpAw4mdU8gr, Hi0rVWfoOR06Cp3yVV3Ost4KQJdHoYsqsW5AddKsxI7pjVt4J5, 3334456338-BBMNgXkXPlAAb6ntpEOM1cYSSqFS9ZbMfpLGQTf, EumJ2DRiAnQNHKOS6X3lWcieqaRw3JkB0G3hNU4E7PAOc, credentials_file=NULL)
setup_twitter_oauth(uV1D14HTuQLBgbFpAw4mdU8gr, Hi0rVWfoOR06Cp3yVV3Ost4KQJdHoYsqsW5AddKsxI7pjVt4J5, 3334456338-BBMNgXkXPlAAb6ntpEOM1cYSSqFS9ZbMfpLGQTf, EumJ2DRiAnQNHKOS6X3lWcieqaRw3JkB0G3hNU4E7PAOc, NULL)
setup_twitter_oauth(uV1D14HTuQLBgbFpAw4mdU8gr, Hi0rVWfoOR06Cp3yVV3Ost4KQJdHoYsqsW5AddKsxI7pjVt4J5, 3334456338-BBMNgXkXPlAAb6ntpEOM1cYSSqFS9ZbMfpLGQTf, EumJ2DRiAnQNHKOS6X3lWcieqaRw3JkB0G3hNU4E7PAOc)
cred <- OAuthFactory$new(consumerKey='uV1D14HTuQLBgbFpAw4mdU8gr', consumerSecret='Hi0rVWfoOR06Cp3yVV3Ost4KQJdHoYsqsW5AddKsxI7pjVt4J5', requestURL='https://api.twitter.com/oauth/request_token', accessURL='https://api.twitter.com/oauth/access_token', authURL='https://api.twitter.com/oauth/authorize')
cred$handshake(cainfo="cacert.pem")
cred$handshake(cainfo="cacert.pem")
save(cred, file="twitter authentication.Rdata")
load("twitter authentication.Rdata")
registerTwitterOAuth(cred)
setup_twitter_oauth(uV1D14HTuQLBgbFpAw4mdU8gr, Hi0rVWfoOR06Cp3yVV3Ost4KQJdHoYsqsW5AddKsxI7pjVt4J5, 3334456338-BBMNgXkXPlAAb6ntpEOM1cYSSqFS9ZbMfpLGQTf, EumJ2DRiAnQNHKOS6X3lWcieqaRw3JkB0G3hNU4E7PAOc)
library(SchedulerR)
install.packages('ScheduleR')
install.packages('ScheduleR')
install.packages('wordcloud')
library(shiny)
library(shinythemes)
install.packages('shinythemes')
?melt
library(reshape2)
?melt
??melt
?sapply
library(data.table)
install.packages('data.table')
install.packages('ScheduleR')
install.packages('SchedulerR')
install.packages('SchedulerR')
install.packages('SchedulerR')
library(SchedulerR)
library(Scheduler)
install.packages('Scheduler')
install.packages('SchedulerR')
install.packages('taskscheduleR')
install.packages("tableHTML")
library(twitteR)
library(ROAuth)
require(RCurl)
library(stringr)
library(tm)
library(ggmap)
library(dplyr)
library(plyr)
library(tm)
library(wordcloud)
key="uV1D14HTuQLBgbFpAw4mdU8gr"
secret="hidden"
library(twitteR)
library(ROAuth)
require(RCurl)
library(stringr)
library(tm)
library(ggmap)
library(plyr)
library(dplyr)
library(tm)
library(wordcloud)
key="uV1D14HTuQLBgbFpAw4mdU8gr"
secret="Hi0rVWfoOR06Cp3yVV3Ost4KQJdHoYsqsW5AddKsxI7pjVt4J5"
setwd("/text_mining_and_web_scraping")
download.file(url="http://curl.haxx.se/ca/cacert.pem",
destfile="/text_mining_and_web_scraping/cacert.pem",
method="auto")
authenticate <- OAuthFactory$new(consumerKey=key,
consumerSecret=secret,
requestURL="https://api.twitter.com/oauth/request_token",
accessURL="https://api.twitter.com/oauth/access_token",
authURL="https://api.twitter.com/oauth/authorize")
setup_twitter_oauth(key, secret)
library(xlsx)
install.packages("xlsx")
install.packages("bootstrap")
inputtable
clean
quit()
setwd("~/R/Working Directory/Retail Analysis")
library(xlsx)
retailanalytics <- read.xlsx("Retail Analytics.xlsx", sheetIndex = 1)
retailanalytics$Date<-as.Date(retailanalytics$Date, "%d/%m/%Y")
date<-NULL
customer<-NULL
for (i in 1:length(retailanalytics$Customer.code)) {
data<-retailanalytics$Customer.code[i]
if(is.na(data)){
retailanalytics$Date[i]<-date
retailanalytics$Customer.code[i]<-customer
}
date<-retailanalytics$Date[i]
customer<-retailanalytics$Customer.code[i]
}
retailanalytics<-retailanalytics[!is.na(retailanalytics$Item.code),]
write.csv(retailanalytics,"Retail Analytics.csv", row.names=F)
View(retailanalytics)
setwd("~/R/Working Directory/Retail Analysis")
library(data.table)
library(plyr)
inputtable<-read.csv("Retail Analytics.csv")
View(inputtable)
customer_group<-ddply(inputtable,~Customer.code)
write.csv(customer_group,"Customer Grouping.csv", row.names=F)
customer_unit<-ddply(customer_group,~Customer.code,summarise,Sum_Unit=sum(Units))
cust<-as.data.frame(table(customer_group$Customer.code))
customer_unit$Frequency<-cust$Freq
write.csv(customer_unit,"Units per Customer.csv", row.names=F)
item_group<-ddply(customer_group,~Item.code)
write.csv(item_group,"Item Grouping.csv", row.names=F)
item_unit<-ddply(item_group,~Item.code,summarise,Sum_Unit=sum(Units))
itm<-as.data.frame(table(item_group$Item.code))
item_unit$Frequency<-itm$Freq
write.csv(item_unit,"Units per Item.csv", row.names=F)
rm<-c()
item_customer_unit_date<-data.table(item_group)
item_customer_unit_date<-item_customer_unit_date[,Sum_Unit:=sum(Units), by=list(Customer.code,Item.code)]
item_customer_unit<-item_customer_unit_date[,c(-1,-4)]
for(i in 1:(length(item_customer_unit$Customer.code)-1)){
if(item_customer_unit$Customer.code[i]==item_customer_unit$Customer.code[i+1]
&& item_customer_unit$Item.code[i]==item_customer_unit$Item.code[i+1]){
rm<-append(rm,i+1)
}}
for(i in 1:length(rm)){
item_customer_unit[(rm[i]),]=NA
}
item_customer_unit <- item_customer_unit[rowSums(is.na(item_customer_unit))<ncol(item_customer_unit),]
trainingdata<-inputtable[1:433,]
write.csv(trainingdata,"Tranining dataset.csv", row.names=F)
testingdata<-inputtable[434:659,]
write.csv(testingdata,"Testing dataset.csv", row.names=F)
setwd("~/R/Working Directory/Retail Analysis/Item Dataset")
items<-levels(item_unit$Item.code)
for(i in 1:length(items)){
x=items[i]
y<-assign(x,inputtable[(as.character(inputtable$Item.code)==x),])
write.csv(y, paste0(x,".csv"), row.names=F)
}
setwd("~/R/Working Directory/Retail Analysis/Customer Dataset")
customers<-levels(customer_unit$Customer.code)
for(i in 1:length(customers)){
x=customers[i]
y<-assign(x,inputtable[(as.character(inputtable$Customer.code)==x),])
write.csv(y, paste0(x,".csv"), row.names=F)
}
ggplot(NULL, aes(Date, Customer.code))+geom_point(data=C1,color="red")
+geom_point(data=C2,color="green")
+geom_point(data=C3,color="blue")
+geom_point(data=C4,color="yellow")
+geom_point(data=C5,color="brown")
+geom_point(data=C6,color="orange")
+geom_point(data=C7,color="violet")
+geom_point(data=C8,color="black")
library(ggplot2)
ggplot(NULL, aes(Date, Customer.code))+geom_point(data=C1,color="red")+geom_point(data=C2,color="green")+geom_point(data=C3,color="blue")+geom_point(data=C4,color="yellow")+geom_point(data=C5,color="brown")+geom_point(data=C6,color="orange")+geom_point(data=C7,color="violet")+geom_point(data=C8,color="black")
View(C1919)
View(customer_group)
View(inputtable)
View(inputtable)
customer_group<-ddply(inputtable,~Customer.code)
retailanalytics <- read.xlsx("Retail Analytics.xlsx", sheetIndex = 1)
setwd("~/R/Working Directory/Retail Analysis")
library(xlsx)
retailanalytics <- read.xlsx("Retail Analytics.xlsx", sheetIndex = 1)
View(retailanalytics)
finaldata<-retailanalytics
View(finaldata)
finaldata$Date<-as.numeric(finaldata$Date)
finaldata$Date <- as.Date(finaldata$Date, origin = "1899-12-30")
finaldata<-retailanalytics
finaldata$Date[1]
betterdates<-finaldata$Date
betterdates
betterdates<-as.array(betterdates)
betterdates
betterdates<-as.numeric(betterdates)
betterdates
test<-finaldata
finaldata<-retailanalytics
test<-finaldata
retailanalytics$Date<-as.Date(retailanalytics$Date, "%d/%m/%Y")
betterdates<-retailanalytics$Date
betterdates
betterdates<-finaldata$Date
betterdates
summary(betterdates)
finaldata$Date[1]
retailanalytics<-retailanalytics[!is.na(retailanalytics$Item.code),]
retailanalytics<-test
retailanalytics<-retailanalytics[!is.na(retailanalytics$Item.code),]
finaldata<-retailanalytics
betterdates<-finaldata$Date
summary(betterdates)
betterdates<-as.data.frame(betterdates)
summary(betterdates)
betterdates[1]
View(betterdates[1])
betterdates<-as.array(betterdates)
betterdates<-as.array(betterdates[1])
betterdates<-as.array(betterdates[,1])
betterdates
betterdates<-finaldata$Date
betterdates<-as.data.frame(betterdates)
beterdates$betterdates <- as.Date(beterdates$betterdates, origin = "1899-12-30")
betterdates<-finaldata$Date
betterdates<-as.data.frame(betterdates)
View(betterdates)
date <- as.Date(beterdates$betterdates, origin = "1899-12-30")
date <- as.Date(beterdates, origin = "1899-12-30")
betterdates
date <- as.Date(betterdates, origin = "1899-12-30")
date <- as.Date(betterdates$betterdates, origin = "1899-12-30")
View(date)
date<-betterdates$betterdates
View(betterdates)
summary(date)
b<-date
b<-date
dates <- c(30829, 38540)
summary(dates)
setwd("~/R/Working Directory/Retail Analysis")
library(xlsx)
retailanalytics <- read.xlsx("Retail Analytics.xlsx", sheetIndex = 1)
retailanalytics<-retailanalytics[!is.na(retailanalytics$Item.code),]
finaldata<-retailanalytics
test<-finaldata
retailanalytics$Date<-as.Date(retailanalytics$Date, "%d/%m/%Y")
test<-unlist(test$Date)
class(test)
test<-finaldata
View(test)
test<-unlist(test[,1])
class(test)
test
is.numeric(1/12/2014)
test[1]
is.numeric(test[1])
is.numeric(test[133])
retailanalytics$Date<-as.Date(retailanalytics$Date, "%d/%m/%Y")
is.numeric.Date(1/04/2014)
is.numeric.Date(41741)
?factor
class(finaldata$Date)
class(unclass(finaldata$Date))
class(dates)
dat<-unclass(finaldata$Date)
for(i in 1:length(retailanalytics)){
if(!is.na(retailanalytics$Date)){
finaldata$Date=NA
}
}
retailanalytics <- read.xlsx("Retail Analytics.xlsx", sheetIndex = 1)
retailanalytics<-retailanalytics[!is.na(retailanalytics$Item.code),]
finaldata<-retailanalytics
test<-finaldata
retailanalytics$Date<-as.Date(retailanalytics$Date, "%d/%m/%Y")
for(i in 1:length(retailanalytics)){
if(!is.na(retailanalytics$Date[i])){
finaldata$Date=NA
}
}
finaldata<-test
for(i in 1:length(retailanalytics)){
if(!is.na(retailanalytics$Date[i])){
finaldata$Date[i]=NA
}
}
for(i in 1:length(retailanalytics$Date)){
if(!is.na(retailanalytics$Date[i])){
finaldata$Date[i]=NA
}
}
finaldata$Date[286]
d<-c(finaldata$Date[286])
d
?`factor-class`
?factor
as.vector(finaldata$Date[286])
d<-as.vector(finaldata$Date)
finaldata<-test
dates<-as.vector(finaldata$Date)
as.numeric.vector("1")
as.numeric("41748")
as.numeric(dates[1])
as.numeric(dates[286])
dates<-as.vector(finaldata$Date)
dates<-as.numeric(dates)
dates<-as.Date(dates, origin = "1899-12-30")
for(i in 1:length(retailanalytics$Date)){
if(is.na(retailanalytics$Date[i])){
retailanalytics$Date[i]=dates[i]
}
}
date<-NULL
customer<-NULL
for (i in 1:length(retailanalytics$Customer.code)) {
data<-retailanalytics$Customer.code[i]
if(is.na(data)){
retailanalytics$Date[i]<-date
retailanalytics$Customer.code[i]<-customer
}
date<-retailanalytics$Date[i]
customer<-retailanalytics$Customer.code[i]
}
write.csv(retailanalytics,"Retail Analytics.csv", row.names=F)
setwd("~/R/Working Directory/Retail Analysis")
library(data.table)
library(plyr)
inputtable<-read.csv("Retail Analytics.csv")
View(inputtable)
customer_group<-ddply(inputtable,~Customer.code)
write.csv(customer_group,"Customer Grouping.csv", row.names=F)
customer_unit<-ddply(customer_group,~Customer.code,summarise,Sum_Unit=sum(Units))
cust<-as.data.frame(table(customer_group$Customer.code))
customer_unit$Frequency<-cust$Freq
write.csv(customer_unit,"Units per Customer.csv", row.names=F)
View(customer_group)
item_group<-ddply(customer_group,~Item.code)
write.csv(item_group,"Item Grouping.csv", row.names=F)
item_unit<-ddply(item_group,~Item.code,summarise,Sum_Unit=sum(Units))
itm<-as.data.frame(table(item_group$Item.code))
item_unit$Frequency<-itm$Freq
write.csv(item_unit,"Units per Item.csv", row.names=F)
rm<-c()
item_customer_unit_date<-data.table(item_group)
item_customer_unit_date<-item_customer_unit_date[,Sum_Unit:=sum(Units), by=list(Customer.code,Item.code)]
item_customer_unit<-item_customer_unit_date[,c(-1,-4)]
for(i in 1:(length(item_customer_unit$Customer.code)-1)){
if(item_customer_unit$Customer.code[i]==item_customer_unit$Customer.code[i+1]
&& item_customer_unit$Item.code[i]==item_customer_unit$Item.code[i+1]){
rm<-append(rm,i+1)
}}
for(i in 1:length(rm)){
item_customer_unit[(rm[i]),]=NA
}
item_customer_unit <- item_customer_unit[rowSums(is.na(item_customer_unit))<ncol(item_customer_unit),]
x <- as.POSIXct(inputtable$Date)
mo <- strftime(x, "%m")
yr <- strftime(x, "%Y")
unit<-inputtable$Units
dd <- data.frame(mo, yr, unit)
dd$count<-1
sale_per_month<-aggregate(unit ~ mo + yr, dd, FUN = sum)
sale_per_month1<-aggregate(count ~ mo + yr, dd, FUN = sum)
sale_per_month$count<-sale_per_month1$count
write.csv(sale_per_month,"Sales per month.csv", row.names=F)
trainingdata<-inputtable[1:433,]
write.csv(trainingdata,"Tranining dataset.csv", row.names=F)
testingdata<-inputtable[434:659,]
write.csv(testingdata,"Testing dataset.csv", row.names=F)
setwd("~/R/Working Directory/Retail Analysis/Item Dataset")
items<-levels(item_unit$Item.code)
for(i in 1:length(items)){
x=items[i]
y<-assign(x,inputtable[(as.character(inputtable$Item.code)==x),])
write.csv(y, paste0(x,".csv"), row.names=F)
}
setwd("~/R/Working Directory/Retail Analysis/Customer Dataset")
customers<-levels(customer_unit$Customer.code)
for(i in 1:length(customers)){
x=customers[i]
y<-assign(x,inputtable[(as.character(inputtable$Customer.code)==x),])
write.csv(y, paste0(x,".csv"), row.names=F)
}
library(ggplot2)
ggplot(NULL, aes(Date, Customer.code))+geom_point(data=C1,color="red")+geom_point(data=C2,color="green")+geom_point(data=C3,color="blue")+geom_point(data=C4,color="yellow")+geom_point(data=C5,color="brown")+geom_point(data=C6,color="orange")+geom_point(data=C7,color="violet")+geom_point(data=C8,color="black")
View(C1871)
View(C1871)
View(C187)
ggplot(NULL, aes(Date, Customer.code))+geom_point(data=I1,color="red")+geom_point(data=I2,color="green")+geom_point(data=I3,color="blue")+geom_point(data=I4,color="yellow")+geom_point(data=I5,color="brown")+geom_point(data=I6,color="orange")+geom_point(data=I7,color="violet")+geom_point(data=I8,color="black")
ggplot(NULL, aes(Date, Customer.code))+geom_line(data=I1,color="red")+geom_point(data=I2,color="green")+geom_point(data=I3,color="blue")+geom_point(data=I4,color="yellow")+geom_point(data=I5,color="brown")+geom_point(data=I6,color="orange")+geom_point(data=I7,color="violet")+geom_point(data=I8,color="black")
ggplot(NULL, aes(Date, Customer.code))+geom_line(data=I1,color="red")+geom_line(data=I2,color="green")+geom_point(data=I3,color="blue")+geom_point(data=I4,color="yellow")+geom_point(data=I5,color="brown")+geom_point(data=I6,color="orange")+geom_point(data=I7,color="violet")+geom_point(data=I8,color="black")
View(I2)
